<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="cxg" version="2.5">
	<display-name>cxg</display-name>
	
	<!-- 解决post乱码 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 加载spring容器 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/applicationContext-*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- springmvc的前端控制器 -->
	<servlet>
		<servlet-name>cxg-interactiveweb</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- contextConfigLocation不是必须的， 如果不配置contextConfigLocation， springmvc的配置文件默认在：WEB-INF/servlet的name+"-servlet.xml" -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/springmvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>cxg-interactiveweb</servlet-name>
		<!-- 伪静态化 -->
		<url-pattern>*.html</url-pattern>
	</servlet-mapping> 

	<!-- log4j日志 -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>webApp.root</param-value>
	</context-param>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>


	<welcome-file-list>
	    <welcome-file>index.html</welcome-file>
	</welcome-file-list>
<!-- 默认的错误处理页面 -->  
    <error-page>  
        <error-code>403</error-code>  
        <location>/index.html</location>  
    </error-page>  
    <error-page>  
        <error-code>404</error-code>  
        <location>/index.html</location>  
    </error-page>  
    <!-- 仅仅在调试的时候注视掉,在正式部署的时候不能注释 -->  
    <!-- 这样配置也是可以的，表示发生500错误的时候，转到500.html页面处理。 -->  
    <error-page>   
        <error-code>500</error-code>   
        <location>/error500.html</location>   
    </error-page>   
      
   
    <error-page>   
        <exception-type>java.lang.Exception</exception-type>   
        <location>/error500.html</location>   
    </error-page>   
      
    <error-page>   
        <exception-type>java.lang.Throwable</exception-type>   
        <location>/error500.html</location>   
    </error-page>  
</web-app>